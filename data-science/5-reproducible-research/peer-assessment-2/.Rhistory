demo9)
demo（）
demo()
pbeta(0.75, 2, 1)
x <- c(-0.5, 0 ,0.5, 1, 1.5)
y <- c(0, 0, 1, 2, 0)
plot(x,y,type = 'l')
x <- c(-0.5, 0 ,0.5, 1, 1, 1.5)
y <- c(0, 0, 1, 2, 0, 0)
plot(x,y,type = 'l')
p1 <- pbeta(0.75, 2, 1)
x1 <- c(p1, p1)
y1 <- c(0, 2 * p1)
?plot
require(stats)
head(lowess(cars))
lines(list(x=x1, y=y1))
lines(list(x=x1, y=y1), col='red')
1.5 * 0.75 / 2
?pbeat
?pbeta
?pnorm
?rnorm
0.75 ^ 2
?ppois
qbeta(1, 2,1)
qbeta(2, 2,1)
pbeta(0.75, 2, 1)
pbeta(1.3, 2, 1)
pbeta(2.1, 2, 1)
pbeta(2, 2, 1)
qbeta(0.5625, 2 ,1)
qbeta(0, 2 ,1)
qbeta(-1, 2 ,1)
qbeta(0.5, 2, 1)
sqrt(0.5)
p<-c(.1,.2,.3,.4)
x = 2:5
?var
x
p
x * p
x %*% p
sum(x*p)
qunif(0.75, 0, 1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
sum(temp[1,] * temp[2,])
setwd("/Users/zhouyanhui/r-ws/5-reproducible-research/peer-assessment-2")
weatherdata <- read.csv(bzfile("repdata-data-StormData.csv.bz2"))
head(weatherdata)
unique(weatherdata$PROPDMGEXP)
unique(weatherdata$CROPDMGEXP)
?recode
names(weatherdata)
table(weatherdata$FATALITIES)
table(weatherdata$F)
table(weatherdata$ZONENAMES)
unique(weatherdata$CROPDMGEXP)
unique(weatherdata$PROPDMGEXP)
table(eeData$EVTYPE)
eeData <- weatherdata[,c('EVTYPE','FATALITIES','INJURIES', 'PROPDMG', 'PROPDMGEXP', 'CROPDMG', 'CROPDMGEXP')]
table(eeData$EVTYPE)
unique(eeData$EVTYPE)
length(unique(eeData$EVTYPE))
table(eeData$FATALITIES)
unique(eeData$FATALITIES)
unique(eeData$INJURIES)
str(unique(eeData$INJURIES))
head(eeData)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data=eeData, sum)
head(fatalities)
head(order(fatalities))
fatalities <- aggregate(FATALITIES ~ EVTYPE, data=eeData, sum, na.rm=TRUE)
head(order(fatalities))
head(fatalities)
head(fatalities[order(-fatalities$FATALITIES), ])
head(fatalities[order(fatalities$FATALITIES), ])
table(fatalities$FATALITIES)
table(fatalities$INJURIES)
table(eeData$INJURIES)
fatalitiesData <- aggregate(FATALITIES ~ EVTYPE, data=eeData, sum)
injuriesData <- aggregate(INJURIES ~ EVTYPE, data=eeData, sum)
str(eeData$EVTYPE)
summary(fatalitiesData)
summary(fatalitiesData$FATALITIES)
dim(fatalitiesData)
dim(injuriesData)
summary(injuriesData$INJURIES)
healthHarmData <- merge(fatalitiesData, injuriesData, by="EVTYPE")
head(healthHarmData)
healthHarmData <- merge(fatalitiesData, injuriesData, by="EVTYPE")
healthHarmData <- aggregate(healthHarmData, -FATALITIES, -INJURIES)
library(dplyr)
arrange()
?suppressPackageStartupMessages
?arrange
healthHarmData <- arrange(healthHarmData, -FATALITIES, -INJURIES)
head(healthHarmData)
head(eeData)
tolower("H")
eeData$propDmgAmout <- 0
idx <- toupper(eeData$PROPDMGEXP) == 'H'
eeData$propDmgAmout[idx] <- eeData$PROPDMG[idx] * 100
idx <- toupper(eeData$PROPDMGEXP) == 'K'
eeData$propDmgAmout[idx] <- eeData$PROPDMG[idx] * 1000
idx <- toupper(eeData$PROPDMGEXP) == 'M'
eeData$propDmgAmout[idx] <- eeData$PROPDMG[idx] * 10^6
idx <- toupper(eeData$PROPDMGEXP) == 'B'
eeData$propDmgAmout[idx] <- eeData$PROPDMG[idx] * 10^9
eeData$cpropDmgAmout <- 0
idx <- toupper(eeData$CPROPDMGEXP) == 'H'
eeData$cpropDmgAmout[idx] <- eeData$CPROPDMG[idx] * 100
idx <- toupper(eeData$CPROPDMGEXP) == 'K'
eeData$cpropDmgAmout[idx] <- eeData$CPROPDMG[idx] * 1000
idx <- toupper(eeData$CPROPDMGEXP) == 'M'
eeData$cpropDmgAmout[idx] <- eeData$CPROPDMG[idx] * 10^6
idx <- toupper(eeData$CPROPDMGEXP) == 'B'
eeData$cpropDmgAmout[idx] <- eeData$CPROPDMG[idx] * 10^9
head(eeData)
damages <- aggregate(propDmgAmout _ cpropDmgAmout ~ EVTYPE, data=eeData, sum)
damages <- aggregate(propDmgAmout + cpropDmgAmout ~ EVTYPE, data=eeData, sum)
head(damages)
pp <- aggregate(propDmgAmout  ~ EVTYPE, data=eeData, sum)
head(pp)
cpp <- aggregate(cpropDmgAmout  ~ EVTYPE, data=eeData, sum)
head(cpp)
pp[order(pp$propDmgAmout)]
head(pp[order(pp$propDmgAmout),])
head(pp[order(-pp$propDmgAmout),])
head(cpp[order(-pp$propDmgAmout),])
head(damages[order(-pp$propDmgAmout),])
head(cpp[order(-cpp$propDmgAmout),])
head(cpp[order(-cpp$cpropDmgAmout),])
str(eeData$CROPDMG)
str(unique(eeData$CROPDMG))
idx <- toupper(eeData$CPROPDMGEXP) == 'H'
head(idx)
str(unique(eeData$CPROPDMGEXP))
eeData$CPROPDMGEXP
eeData$cropDmgAmout <- 0
idx <- toupper(eeData$CROPDMGEXP) == 'H'
eeData$cropDmgAmout[idx] <- eeData$CROPDMG[idx] * 100
idx <- toupper(eeData$CROPDMGEXP) == 'K'
eeData$cropDmgAmout[idx] <- eeData$CROPDMG[idx] * 1000
idx <- toupper(eeData$CROPDMGEXP) == 'M'
eeData$cropDmgAmout[idx] <- eeData$CROPDMG[idx] * 10^6
idx <- toupper(eeData$CROPDMGEXP) == 'B'
eeData$cropDmgAmout[idx] <- eeData$CROPDMG[idx] * 10^9
damages <- aggregate(propDmgAmout + cpropDmgAmout ~ EVTYPE, data=eeData, sum)
damages <- aggregate(propDmgAmout + cropDmgAmout ~ EVTYPE, data=eeData, sum)
cpp <- aggregate(cropDmgAmout ~ EVTYPE, data = eeData, sum)
head(cpp[order(-pp$propDmgAmout),])
head(pp[order(-pp$propDmgAmout),])
head(cpp[order(-cpp$cropDmgAmout),])
head(damages[order(-damages$`propDmgAmout + cropDmgAmout`),])
5661968450 + 144657709800
head(damages)
head(healthHarmData)
ggplot(healthHarmData, aes(EVTYPE, FATALITIES)) + geom_line()
library(ggplot2)
ggplot(healthHarmData, aes(EVTYPE, FATALITIES)) + geom_line()
str(healthHarmData$EVTYPE)
ggplot(healthHarmData[1:10, ], aes(EVTYPE, FATALITIES)) + geom_line()
healthHarmData[1:10, ]
ggplot(healthHarmData[1:10, ], aes(EVTYPE, FATALITIES)) + geom_point("points")
ggplot(healthHarmData[1:10, ], aes(EVTYPE, FATALITIES)) + geom("points")
ggplot(healthHarmData[1:10, ], aes(EVTYPE, FATALITIES)) + geom_line("points")
?"ggplot"
ggplot(healthHarmData[1:10, ], aes(EVTYPE, FATALITIES)) + geom_point()
ggplot(healthHarmData[1:9, ], aes(EVTYPE, FATALITIES)) + geom_point()
ggplot(healthHarmData[1:9, ], aes(EVTYPE, FATALITIES))
+ geom_point()
+ xlab("Event Type") + ylab("Fatalities")
g <- ggplot(healthHarmData[1:9, ], aes(EVTYPE, FATALITIES))
g + geom_point()
+ xlab("Event Type") + ylab("Fatalities")
g <- ggplot(healthHarmData[1:9, ], aes(EVTYPE, FATALITIES))
g + geom_point()
+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
+ xlab("Event Type") + ylab("Fatalities")
g <- ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES))
g + geom_point()
g + geom_line()
g + geom_point()
ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES)) +
geom_bar(stat = "identity", fill = "blue", las = 3) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Event Type") + ylab("Fatalities") + ggtitle("Number of fatalities by top 10 Weather Events")
?geom_point
g <- ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES))
g + geom_point(colour = "green", size = 4)
g + geom_point(colour = "green", size = 4) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_point(colour = "green", size = 4) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("Event Type") + ylab("Fatalities")
g + geom_line(colour = "green", size = 4) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("Event Type") + ylab("Fatalities")
?geom_line
p <- ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES))
p + geom_line() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("Event Type") + ylab("Fatalities")
?geom_point
ggplot(healthHarmData[1:9, ], aes(EVTYPE)) +
geom_line(aes(y = FATALITIES, colour = "FATALITIES")) +
geom_line(aes(y = INJURIES, colour = "INJURIES"))
ggplot(healthHarmData[1:9, ], aes(EVTYPE)) +
geom_line(aes(y = FATALITIES, colour = "FATALITIES")) + geom_point()
geom_line(aes(y = INJURIES, colour = "INJURIES")) + geom_point()
?geom_line
p <- ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES))
p + geom_line(c("point"))
p <- ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES))
p + geom_line(c("points"))
p + geom_line(c("line"))
p + geom_line("line")
p + geom_line("points")
p <- ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES))
p + geom_line()
p <- ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES) )
p <- ggplot(healthHarmData[1:9, ])
p + geom_line(aes(x = EVTYPE, y = FATALITIES))
p <- ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES, group =name))
p + geom_line()
p <- ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES, group ="FATALITIES"))
p + geom_line()
p + geom_line(aes(colour="green"))
p + geom_line(aes(colour="FATALITIES"))
p + geom_line() + geom_line(aes(x=EVTYPE, y = INJURIES))
p + geom_line(colour = "FATALITIES") + geom_line(aes(x=EVTYPE, y = INJURIES, colour = "INJURIES"))
p + geom_line(aes(colour = "FATALITIES") + geom_line(aes(x=EVTYPE, y = INJURIES, colour = "INJURIES"))
)
p + geom_line(aes(colour = "FATALITIES")) + geom_line(aes(x=EVTYPE, y = INJURIES, colour = "INJURIES"))
p + geom_line(aes(colour = "FATALITIES")) + geom_line(aes(x=EVTYPE, y = INJURIES, colour = "INJURIES")) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("Event Type") + ylab("Fatalities")
p <- ggplot(healthHarmData[1:9, ], aes(x = EVTYPE, y = FATALITIES, group ="HEALTH"))
p + geom_line(aes(colour = "FATALITIES")) + geom_line(aes(x=EVTYPE, y = INJURIES, colour = "INJURIES")) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("Event Type") + ylab("Fatalities")
library(reshape2)
dfm = melt(df, id.vars='frame')
df <- healthHarmData[1:9, ]
dfm <- melt(df, id.vars = 'EVTYPE')
head(dfm)
head(df)
dfm <- melt(df, id.vars = 'EVTYPE', variable.name = 'Impacts to human health')
head(dfm)
p <- ggplot(dfm, aes(x = EVTYPE, y = value, group ="Impacts to human health"))
p + geom_line()
p <- ggplot(dfm, aes(x = EVTYPE, y = value, group =Impacts.to.human.health))
p + geom_line()
p <- ggplot(dfm, aes(x = EVTYPE, y = value, group =Impacts.to.human.health))
p + geom_line()
dfm <- melt(df, id.vars = 'EVTYPE', variable.name = 'Impacts.to.human.health')
p <- ggplot(dfm, aes(x = EVTYPE, y = value, group =Impacts.to.human.health))
p + geom_line()
p <- ggplot(dfm, aes(x = EVTYPE, y = value, colour =Impacts.to.human.health))
p + geom_line()
p <- ggplot(dfm, aes(x = EVTYPE, y = value, group =Impacts.to.human.health))
p + geom_line(aes(colour="Impacts.to.human.health"))
p + geom_line(aes(colour=Impacts.to.human.health))
p <- ggplot(dfm, aes(x = EVTYPE, y = value))
p + facet_grid(facets = Impacts.to.human.health)
p + facet_grid(.~Impacts.to.human.health)
p + facet_grid(.~Impacts.to.human.health) + geom_line()
p + facet_grid(.~Impacts.to.human.health) + geom_line(p <- ggplot(dfm, aes(x = EVTYPE, y = value, group =Impacts.to.human.health)) )
p <- ggplot(dfm, aes(x = EVTYPE, y = value, group =Impacts.to.human.health))
p + facet_grid(.~Impacts.to.human.health) + geom_line()
p <- ggplot(dfm, aes(x = EVTYPE, y = value, group =Impacts.to.human.health))
p + geom_line(aes(colour=Impacts.to.human.health)) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("Event Type") + ylab("Fatalities")
?ggtitle
p <- ggplot(dfm, aes(x = EVTYPE, y = value, group =Impacts.to.human.health)) + geom_line(aes(colour=Impacts.to.human.health)) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("Event Type") + ylab("Number of individuals") + ggtitle("Number of impact individuals by top 9 Events")
print(p)
head(economicDmg)
eeData$propDmgAmout <- 0
idx <- toupper(eeData$PROPDMGEXP) == 'H'
eeData$propDmgAmout[idx] <- eeData$PROPDMG[idx] * 100
idx <- toupper(eeData$PROPDMGEXP) == 'K'
eeData$propDmgAmout[idx] <- eeData$PROPDMG[idx] * 1000
idx <- toupper(eeData$PROPDMGEXP) == 'M'
eeData$propDmgAmout[idx] <- eeData$PROPDMG[idx] * 10^6
idx <- toupper(eeData$PROPDMGEXP) == 'B'
eeData$propDmgAmout[idx] <- eeData$PROPDMG[idx] * 10^9
eeData$cropDmgAmout <- 0
idx <- toupper(eeData$CROPDMGEXP) == 'H'
eeData$cropDmgAmout[idx] <- eeData$CROPDMG[idx] * 100
idx <- toupper(eeData$CROPDMGEXP) == 'K'
eeData$cropDmgAmout[idx] <- eeData$CROPDMG[idx] * 1000
idx <- toupper(eeData$CROPDMGEXP) == 'M'
eeData$cropDmgAmout[idx] <- eeData$CROPDMG[idx] * 10^6
idx <- toupper(eeData$CROPDMGEXP) == 'B'
eeData$cropDmgAmout[idx] <- eeData$CROPDMG[idx] * 10^9
economicDmg <- aggregate(propDmgAmout + cropDmgAmout ~ EVTYPE, data=eeData, sum)
names(economicDmg) <- c("EVTYPE", "economicDmg")
head(economicDmg)
economicDmg <- arrange(economicDmg, -economicDmg)
head(economicDmg)
df <- economicDmg[1:9, ]
with(df, qplot(EVTYPE, economicDmg, geom="geom_bar"))
df <- economicDmg[1:9, ]
?qplot
with(df, qplot(EVTYPE, economicDmg, geom="histogram"))
?qplot
with(df, qplot(EVTYPE, economicDmg, geom="barplot"))
with(df, qplot(EVTYPE, economicDmg, geom="dotplot"))
p <- with(df, qplot(EVTYPE, economicDmg))
print(p)
with(df, qplot(EVTYPE, economicDmg, geom="histogram"))
with(df, qplot(EVTYPE, economicDmg, geom="geom_bar"))
?geom_bar
with(df, qplot(EVTYPE, economicDmg, geom="bar"))
df
p <- with(df, ggplot(aes(x=EVTYPE, y=economicDmg)))
p <- with(df, ggplot(aes(x=unclass(EVTYPE), y=economicDmg)))
class(df$economicDmg)
p <- ggplot(df, aes(x=EVTYPE, y=economicDmg))
p <- p +geom_bar(stat = "identity", fill = "blue", las = 3)
print(p)
?geom_bar
p +geom_bar(stat = "identity", fill = "blue")
p +geom_bar(stat = "identity", fill = "blue", las = 3)
p +geom_bar(stat = "identity", fill = "blue")
p +geom_bar(stat = "identity", fill = "blue", las = 3)
p +geom_bar(stat = "identity", fill = "blue")
p +geom_bar(stat = "identity", fill = "blue", las = 3)
p +geom_bar(stat = "identity", fill = "blue")
p +geom_bar(fill = "blue")
p +geom_bar(fill = "blue")
p +geom_bar(stat = "identity", fill = "blue")
df <- economicDmg[1:9, ]
p <- ggplot(df, aes(x=EVTYPE, y=economicDmg))
p <- p +geom_bar(fill = "blue")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + xlab("Event Type") + ylab("Economic damage") + ggtitle("The 9 Largest Damage Event on Property and Crop")
print(p)
df <- economicDmg[1:9, ]
p <- ggplot(df, aes(x=EVTYPE, y=economicDmg))
p <- p +geom_bar(fill = "blue", stat = "identity")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + xlab("Event Type") + ylab("Economic damage") + ggtitle("The 9 Largest Damage Event on Property and Crop")
print(p)
healthHarmData[1,"INJURIES"]
str(healthHarmData[1,"INJURIES"])
print(healthHarmData[1,"INJURIES"])
So, **The most harmful event with respect to population health is `r healthHarmData[1,"EVTYPE"]`**, it cause `r healthHarmData[1,"FATALITIES"]` fatalities and `r print(healthHarmData[1,"INJURIES"])` injuries.
?warning
?writeLines
？connections
?connections
