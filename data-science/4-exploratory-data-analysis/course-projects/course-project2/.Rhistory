imputed_ave_steps_by_interval <- aggregate(steps ~ interval, data = imputed_data, mean)
imputed_ave_steps_by_interval <- aggregate(steps ~ interval, data = imputed_data, mean)
head(imputed_ave_steps_by_interval)
?aggregate
imputed_ave_steps_by_interval <- aggregate(steps ~ interval + dayofweek, data = imputed_data, mean)
imputed_ave_steps_by_interval <- aggregate(steps ~ interval + dayofweek, data = imputed_data, mean)
head(imputed_ave_steps_by_interval)
?color
imputed_ave_steps_by_interval <- aggregate(steps ~ interval + dayofweek, data = imputed_data, mean)
ggplot(imputed_ave_steps_by_interval, aes(x=interval, y=steps)) +
geom_line('steelblue') +
facet_wrap(~ dayofweek, nrow = 2, ncol = 1) +
labs( x="Interval", y="Number of steps") +
theme_bw()
ggplot(imputed_ave_steps_by_interval, aes(x=interval, y=steps)) +
geom_line(color='silkblue') +
facet_wrap(~ dayofweek, nrow = 2, ncol = 1) +
labs( x="Interval", y="Number of steps") +
theme_bw()
?colors
int(1.2)
as.integer(1.2)
?last
round(1.07661910, digits = 2)
library(pander)
library(pander)
format(1.222222, digits = 2)
format(1.222222, digits = 3)
?format
getwd()
setwd("~/r-ws")
getwd()
rm(list=ls())
set.seed(1234)
par(mar=c(0,0,0,0))
x<-rnorm(12, mean=rep(1:3, each=4), sd = 0.2)
y<-rnorm(12, mean=rep(c(1,2,1), each=4), sd = 0.2)
plot(x,y,col='blue',pch=19,cex=2)
text(x+0.05, y+0.05, labels = as.character(1:12))
df <- data.frame(x,y)
kmeanObj <- kmeans(df, centers = 3)
names(kmeanObj)
kmeanObj$cluster
kmeanObj$centers
plot(x,y,col=kmeanObj$cluster,pch=19,cex=2)
?t
dm <- as.matrix(df)
dm
dm <- as.matrix(df)[sample(1:12), ]
dm
sample(1:12)
kmobj <- kmeans(dm , centers = 3)
par(mfrow=c(1,2), mar=c(2,4,0.1,0.1))
nrow(dm)
image(t(dm)[, 12:1], yaxt)
image(t(dm)[, 12:1], yaxt = 'n')
t(dm)
order(kmobj$cluster)
kmobj$cluster
t(dm)[, order(kmobj$cluster)]
image(t(dm)[, order(kmobj$cluster)], yaxt='n')
?image
?yaxt
t(dm)[, order(kmobj$cluster)]
m <- t(dm)[, order(kmobj$cluster)]
m
image(m, yaxt='n')
m
m$x
m[1,]
m[1,]
m[2,]
x <- 2.8003227 2.9045615 2.8219924 2.8871096 1.8906736 2.1012112 2.0858249 1.8850520 0.5308605 1.0554858 0.7585869 1.2168882
x <- [2.8003227 2.9045615 2.8219924 2.8871096 1.8906736 2.1012112 2.0858249 1.8850520 0.5308605 1.0554858 0.7585869 1.2168882]
str(m)
image(m)
image(1.2)
x <- data.matrix(x=1,y=1)
x <- data.matrix(c(1,1))
x
image(x)
x <- data.matrix(c(1,1,2,2))
x
reshape(x, nrow=2)
reshape(x)
reshape(x, c(2,2))
x <- data.matrix(c(1,1)c(2,2))
x <- data.matrix(c(1,1), c(2,2))
x
?iamge
?image
image(1,1,1)
image(1,1,m)
require(grDevices) # for colours
image(t(volcano)[ncol(volcano):1,])
volcano
heatmap(m)
m
svd(m)
?scale
x <- matrix(1:10, ncol = 2)
x
scale(x, scale = FALSE)
dataMatrixOrdered
library(impute)
heat.colors()
heat.colors(100)
heatmap(heat.colors(100))
topo.colors(1)
pal <- colorRamp(c("red", "blue"))
pal
pal(0,1)
pal(0.2)
pal <- colorRamp(c("red", "blue", "green"))
pal(1)
pal(0.2)
pal(0.2, 1)
pal
pal(0)
pal(0.5)
pal(0.6)
pla2 <- colorRampPalette(c("red", "blue"))
pla2(1)
pla2(2)
pla2(10)
pla2(100)
library(RColorBrewer)
?brewer.pal
brewer.all
?brewer.all
brewer.pal(7,"Greens")
rpois(10)
rpois(10, lambda = 1)
rpois(100, lambda = 1)
rpois(10, lambda = 1)
plot(rpois(10, lambda = 1), rpois(10, lambda = 1)
)
plot(rpois(10, lambda = 1), rpois(10, lambda = 1)
plot(rpois(100, lambda = 1), rpois(100, lambda = 1)
plot(rpois(100, lambda = 1), rpois(100, lambda = 1))
par(nrow=c(1,1))
par(nrow=1
, ncol=1
)
plot(rpois(100, lambda = 1), rpois(100, lambda = 1))
plot(rpois(100, lambda = 1), rpois(100, lambda = 1))
plot(rpois(1000, lambda = 1), rpois(1000, lambda = 1))
x <- c(1,2,3)
y<- c(4,5,6)
table(x,y)
x <- c(1,2,3, 1, 2, 3)
table(x,y)
y<- c(4,5,6, 4, 5, )
y<- c(4,5,6, 4, 5, 6)
table(x,y)
a <- c('a','b','c')
b <- c('a', 'd')
a %in% b
rm(list=ls())
setwd('/Users/zhouyanhui/r-ws/4-exploratory-data-analysis/course-projects/course-project2')
dir()
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot1.R')
ls()
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot1.R')
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot1.R')
ls()
head(SCC)
names(SCC)
head(NEI
)
NEI$Pollutant
unique(NEI$Pollutant)
head(NEI
)
sapply(split(NEI, year), function(g){
sum(g$Emissions)
})
?split
d <- sapply(split(NEI, NEI$year), function(g){
sum(g$Emissions)
})
head(d)
unique(NEI$year)
d <- sapply(split(NEI, NEI$year), function(g){
sum(g$Emissions, na.rm=TRUE)
})
d
sum(!complete.cases(NEI))
class(d)
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot1.R')
par(mfrow=c(1,1))
par(margin(5,5,5,5))
par(mar = c(5,5,5,5))
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot1.R')
plot(names(totalpm25), totalpm25, xlab='year', ylab = 'total PM2.5 emission')
plot(names(totalpm25), totalpm25,
main = 'Total PM2.5 emission from all sources per year',
xlab = 'year', ylab = 'total PM2.5 emission')
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot1.R')
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission from all sources per year',
xlab = 'year', ylab = 'total PM2.5 emission',type='l')
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission from all sources per year',
xlab = 'year', ylab = 'total PM2.5 emission',type='p')
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission from all sources per year',
xlab = 'year', ylab = 'total PM2.5 emission',type='b')
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission from all sources per year',
xlab = 'year', ylab = 'total PM2.5 emission',type='b', col='blue')
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = 'PM2.5 emission', type='b', col='blue')
copy2png('plot2.png')
?copy
?copy_to
?png
png('plot2.png')
copy2png(png)
dev.off()
png('plot2.png')
copy_to(png)
dev.off()
?copy_to
?copy2pdf
?copypdf
png('plot2.png')
dev.copy(png)
dev.off()
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = 'PM2.5 emission',
type='b', col='blue')
png('plot2.png')
dev.copy(png)
dev.off()
?dev.copy
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = 'PM2.5 emission',
type='b', col='blue')
png('plot1.png')
dev.copy(device = png)
dev.off()
pwd
getwd()
?png
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = 'PM2.5 emission',
type='b', col='blue')
dev.copy(device = png, 'plot1.png')
dev.off()
?expression
expression(1 + 0:9)
exp(1i * 2 * pi * (1:K) / K)
?exp
text(exp(1i * 2 * pi * (1:K) / K), col=2)
text(4, 9 , expression(10^6))
text(2002, 5000000 , expression(10^6))
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = 'PM2.5 emission ' + expression(),
type='b', col='blue')
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = 'PM2.5 emission ' + expression(),
type='b', col='blue')
plot(as.Date(names(totalpm25), format="%Y"), totalpm25,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = 'PM2.5 emission',
type='b', col='blue')
text(2002, 5000000 , expression(10^6))
print(expression(10^6))
expression(10^6)
str(expression(10^6))
text( expression(10^6))
text( 1,1,expression(10^6))
>text
?text
text(2002, 5000000 , expression(10^6))
text('2002', 5000000 , expression(10^6))
text(as.Date(names(totalpm25), format="%Y"), totalpm25,, expression(10^6))
text(as.Date(names(totalpm25), format="%Y"), totalpm25, expression(10^6))
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot1.R')
expression('PM2.5 emission (10^6) tons)')
plot(as.Date(names(totalpm25), format="%Y"), totalpm25 / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression('PM2.5 emission (10^6) tons)'),
type='b', col='blue')
dev.copy(device = png, 'plot1.png')
dev.off()
totalpm25 / 10^6
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression('PM2.5 emission (10^6) tons)'),
type='b', col='blue')
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission ',(10^6),' tons)')),
type='b', col='blue')
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='b', col='blue')
?barplot
?plot.type
?plot
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='h', col='blue')
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='c', col='blue')
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='o', col='blue')
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='s', col='blue')
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='S', col='blue')
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='h', col='blue')
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='h', col='blue', lwd=10)
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='h', col='blue', lwd=20)
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='h', col='blue', lwd=15)
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='h', col='blue', lwd=10)
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='h', col='blue', lwd=12)
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot1.R')
unique(NEI$fips)
subNEI <- with(NEI, subset(fips == "24510"))
?subset
with(airquality, subset(Ozone, Temp > 80))
subNEI <- subset(NEI, fips == "24510")
head(subNEI)
unique(subNEI$fips)
head(NEI)
totalpm25 <- aggregate(Emissions ~ year, subNEI, sum)
plot(totalpm25$year, totalpm25$Emissions / 10^6,
main = 'Total PM2.5 emission per year in the Baltimore City, Maryland ',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^6,' tons)')),
type='h', col='blue', lwd=12)
dev.copy(device = png, 'plot2.png')
dev.off()
plot(totalpm25$year, totalpm25$Emissions / 10^3,
main = 'Total PM2.5 emission per year in the Baltimore City, Maryland ',
xlab = 'year', ylab = expression(paste('PM2.5 emission (',10^3,' tons)')),
type='h', col='blue', lwd=12)
dev.copy(device = png, 'plot2.png')
dev.off()
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot2.R')
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot2.R')
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot2.R')
head(NEI)
ggp <- ggplot(subNEI,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
theme_bw() + guides(fill=FALSE)+
facet_grid(.~type,scales = "free",space="free") +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)")) +
labs(title=expression("PM"[2.5]*" Emissions, Baltimore City 1999-2008 by Source Type"))
print(ggp)
?aes
qplot(year, Emissions, data=subNEI, group = type, color=type, geom=c("point", "line")) + labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)")))
qplot(year, Emissions, data=subNEI, group = type, color=type, geom=c("point", "line")) + labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)"))
totalpm25_by_type <- aggregate(Emissions ~ year + type, subNEI, sum)
head(totalpm25_by_type)
ggp <- ggplot(totalpm25_by_type,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
theme_bw() + guides(fill=FALSE)+
facet_grid(.~type,scales = "free",space="free") +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)")) +
labs(title=expression("PM"[2.5]*" Emissions, Baltimore City 1999-2008 by Source Type"))
print(ggp)
qplot(year, Emissions, data=totalpm25_by_type, group = type, color=type, geom=c("point", "line")) + labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)"))
qplot(year, Emissions, data=totalpm25, group = type, color=type, geom=c("point", "line")) + labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)"))
qplot(year, Emissions, data=totalpm25_by_type,
group = type, color=type, geom=c("point", "line"))
+ labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)"))
+ labs(title=expression("PM"[2.5]*" Emissions in
Baltimore City 1999-2008 by Source Type"))
qplot(year, Emissions, data=totalpm25_by_type,
group = type, color=type, geom=c("point", "line"))
+ labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)"))
+ labs(title="PM2.5 Emissions in
Baltimore City 1999-2008 by Source Type")
qplot(year, Emissions, data=totalpm25_by_type,
group = type, color=type, geom=c("point", "line"))
+ labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)"))
+ labs(title="PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
qplot(year, Emissions, data=totalpm25_by_type,
group = type, color=type, geom=c("point", "line"))
+ labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)"),
title="PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
qplot(year, Emissions, data=totalpm25_by_type,
group = type, color=type, geom=c("point", "line"))
+ labs(x="year", y="Total PM2.5 emission (Tons)",
title="PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
library(ggplot2)
?labs
qplot(year, Emissions, data=totalpm25_by_type,
group = type, color=type, geom=c("point", "line"))
+ labs(x="year", y="Total PM2.5 emission (Tons)",
title="PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
?labs
qplot(year, Emissions, data=totalpm25_by_type,
group = type, color=type, geom=c("point", "line"))
+ xlab("year")
+ ylab("Total PM2.5 emission (Tons)")
+ ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
myplot <- qplot(year, Emissions, data=totalpm25_by_type,
group = type, color=type, geom=c("point", "line"))
myplot + xlab("year")
myplot + ylab("Total PM2.5 emission (Tons)")
myplot + ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
print(myplot)
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
myplot + aes(color=type)
myplot + xlab("year")
myplot + ylab("Total PM2.5 emission (Tons)")
myplot + ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
print(myplot)
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
myplot + xlab("year")
myplot + ylab("Total PM2.5 emission (Tons)")
myplot + ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
print(myplot)
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
myplot + xlab("year")
myplot + ylab("Total PM2.5 emission (Tons)")
myplot + ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
myplot + xlab("year")
myplot + ylab("Total PM2.5 emission (Tons)")
myplot + ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
print(myplot)
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
myplot <- myplot + xlab("year")
myplot <- myplot + ylab("Total PM2.5 emission (Tons)")
myplot <- myplot + ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
print(myplot)
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
myplot <- myplot + aes(color=type)
myplot <- myplot + xlab("year")
myplot <- myplot + ylab("Total PM2.5 emission (Tons)")
myplot <- myplot + ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
print(myplot)
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
myplot <- myplot + aes(color=type)
myplot <- myplot + geom_line()
myplot <- myplot + xlab("year")
myplot <- myplot + ylab("Total PM2.5 emission (Tons)")
myplot <- myplot + ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
print(myplot)
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
+ aes(color=type)
+ geom_line()
+ xlab("year")
+ ylab("Total PM2.5 emission (Tons)")
+ ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
print(myplot)
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
myplot <- myplot + aes(color=type)
+ geom_line()
+ xlab("year")
+ ylab("Total PM2.5 emission (Tons)")
+ ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
print(myplot)
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
myplot <- myplot + aes(color=type)
myplot <- myplot + geom_line()
myplot <- myplot + xlab("year")
myplot <- myplot + ylab("Total PM2.5 emission (Tons)")
myplot <- myplot + ggtitle("PM2.5 Emissions in Baltimore City 1999-2008 by Source Type")
print(myplot)
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot3.R')
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot3.R')
source('~/r-ws/4-exploratory-data-analysis/course-projects/course-project2/plot3.R')
print(myplot)
myplot <- qplot(year, Emissions, data=totalpm25_by_type)
myplot <- myplot + aes(color=type)
myplot <- myplot + geom_line()
myplot <- myplot + xlab("year")
myplot <- myplot + ylab("Total PM2.5 emission (Tons)")
myplot <- myplot + ggtitle("PM2.5 emissions in Baltimore city 1999-2008 by source type")
print(myplot)
plot(totalpm25_by_type$year, totalpm25_by_type$Emissions)
getwd()
