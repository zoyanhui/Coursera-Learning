lines(xfit, yfit, col="green", lwd=4)
lines(xfit, yfit, col="violet", lwd=4)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=2, box.lwd=0)
h<-hist(mns, breaks = 30, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=4)
lines(xfit, yfit, col="violet", lwd=4)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=2, box.lwd=0)
?lty
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=2, lwd=2, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=2, lwd=3, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=2, lwd=1, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=2, lwd=4, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=2, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=2, lwd=6, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=2, lwd=7, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=2, lwd=8, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=2, lwd=9, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=3, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=4, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=5, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=6, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=7, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=8, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=9, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=10, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=11, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=12, lwd=5, box.lwd=0)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lty=13, lwd=5, box.lwd=0)
h<-hist(mns, breaks = 30, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
lines(xfit, yfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
h<-hist(mns, breaks = 30, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda)
tyfit <- tyfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
?lines
lines(stats::dnorm)
lines(stats::dnorm(xfit))
lines(stats::dnorm(xfit), col = 'red')
head(xfit)
lines(stats::dnorm(xfit, mean=5, sd = 5), col = 'red')
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda)
lines(xfit, tyfit, col="violet", lwd=5)
range(xfit)
x <- seq(0, 8, length = 1000)
y <- dnorm(x, mean = 5, sd = 5)
plot(x,y)
h<-hist(mns, breaks = 30, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
?hist
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda)
yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
h<-hist(mns, breaks = 50, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
h<-hist(mns, breaks = 40, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
h<-hist(mns, breaks = 10, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
h<-hist(mns, breaks = 20, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
# yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda)
#yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
range(xfit)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda)
tyfit<-dnorm(xfit,mean=5,sd=5)
range(tyfit)
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda * 1/sqrt(n))
lines(xfit, tyfit, col="violet", lwd=5)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
# yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda * 1/sqrt(n))
#yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
dmatrix <- replicate(exnum, rexp(n, lambda))
mns <- apply(dmatrix, 2, mean)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
# yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda * 1/sqrt(n))
#yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
dmatrix <- replicate(exnum, rexp(n, lambda))
mns <- apply(dmatrix, 2, mean)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
# yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda * 1/sqrt(n))
#yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
dmatrix <- replicate(exnum, rexp(n, lambda))
mns <- apply(dmatrix, 2, mean)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
# yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda * 1/sqrt(n))
#yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
dmatrix <- replicate(exnum, rexp(n, lambda))
mns <- apply(dmatrix, 2, mean)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
# yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda * 1/sqrt(n))
#yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
dmatrix <- replicate(exnum, rexp(n, lambda))
mns <- apply(dmatrix, 2, mean)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
# yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda * 1/sqrt(n))
#yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
dmatrix <- replicate(exnum, rexp(n, lambda))
mns <- apply(dmatrix, 2, mean)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
# yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda * 1/sqrt(n))
#yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
dmatrix <- replicate(exnum, rexp(n, lambda))
mns <- apply(dmatrix, 2, mean)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
# yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda * 1/sqrt(n))
#yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
dmatrix <- replicate(exnum, rexp(n, lambda))
mns <- apply(dmatrix, 2, mean)
h<-hist(mns, breaks = 30, prob=TRUE, col='skyblue', xlab='Mean of 40 exponentials', ylab = 'Density', main="Distribution of The Mean of 40 Exponentials", cex.main=0.8, cex.lab=0.8)
rug(mns)
# add the line of sample'mean
abline(v=mean(mns), col='red', lwd = 2)
# add the line of distribution'mean
abline(v=1/lambda, col='black', lwd = 2)
legend("topright", col=c('red', 'black'), legend=c(paste('sample mean:', round(mean(mns), 2)), paste('theoretical mean:',1/lambda)),
cex=0.7, lwd=2, box.lwd=0)
# simulate the distribution
xfit<-seq(min(mns),max(mns),length=length(mns))
yfit<-dnorm(xfit,mean=mean(mns),sd=sd(mns))
# yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, yfit, col="green", lwd=5)
tyfit<-dnorm(xfit,mean=1/lambda,sd=1/lambda * 1/sqrt(n))
#yfit <- yfit*diff(h$mids[1:2])*length(mns)
lines(xfit, tyfit, col="violet", lwd=5)
legend("right", col=c('green', 'violet'), legend=c('sample distribution', 'theoretical distribution'), cex=0.7, lwd=5, box.lwd=0)
h$mids
diff(h$mids[1:2])
d <- density(mtcars$mpg) # returns the density data
plot(d) # plots the results
d <- density(mns)
plot(d)
vardat <- apply(dmatrix, 2, var)
dim(vardata)
dim(vardat)
length(vardata)
length(vardat)
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = 1, size = 2)
ggplot(vardat, aes()) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = 1, size = 2)
vardat <- data.frame(
x = apply(dmatrix, 2, var)
)
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = 1, size = 2)
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = 1/lambda, size = 2)
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = (1/lambda)^2, size = 2)
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = (1/lambda)^2, size = 2, col='red')
?text
?ggplot
?ggplot2
?geom_text
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = ori_theory_var, size = 2, col='red') + geom_text(x = ori_theory_var, y = 0.042, label='theoretical varicane = 25')
geom_vline(xintercept = ori_theory_var, size = 2, col='red') + geom_text(aes(x = ori_theory_var, y = 0.042, label='theoretical varicane = 25'))
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = ori_theory_var, size = 2, col='red') + geom_text(aes(x = ori_theory_var, y = 0.042, label='theoretical varicane = 25'))
ori_theory_var <- (1/lambda)^2
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = ori_theory_var, size = 2, col='red') + geom_text(aes(x = ori_theory_var, y = 0.042, label='theoretical varicane = 25'))
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = ori_theory_var, size = 2, col='red') + geom_text(aes(x = ori_theory_var, y = 0.042, label='theoretical varicane = 25'), hjust =0, vjust =0)
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = ori_theory_var, size = 2, col='red') + geom_text(aes(x = ori_theory_var, y = 0.042, label='theoretical varicane = 25', col='red'), hjust =0, vjust =0)
ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = ori_theory_var, size = 2, col='red') + geom_text(aes(x = ori_theory_var + 3, y = 0.042, label='theoretical varicane = 25', col='red'), hjust =0, vjust =0)
?geom_text
g <- ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2)
g <- g + geom_vline(xintercept = ori_theory_var, size = 2, col='red')
g <- g + geom_text(aes(x = ori_theory_var + 3, y = 0.042,
label='theoretical varicane = 25'),
hjust =0, vjust =0, colour = 'red')
print(g)
g <- ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2)
g <- g + geom_vline(xintercept = ori_theory_var, size = 2, col='red')
g <- g + geom_text(aes(x = ori_theory_var + 3, y = 0.042,
label='theoretical varicane = 25'),
hjust =0, vjust =0, colour = 'red')
g <- g + title(main='Sample Variance versus Theoretical Variance',
xlab = 'Variance of 40 exponentials')
print(g)
g <- g + ggtitle(main='Sample Variance versus Theoretical Variance',
xlab = 'Variance of 40 exponentials')
g <- ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2)
g <- g + geom_vline(xintercept = ori_theory_var, size = 2, col='red')
g <- g + geom_text(aes(x = ori_theory_var + 3, y = 0.042,
label='theoretical varicane = 25'),
hjust =0, vjust =0, colour = 'red')
g <- g + ggtitle(main='Sample Variance versus Theoretical Variance',
xlab = 'Variance of 40 exponentials')
print(g)
?ggtitle
ori_theory_var <- (1/lambda)^2
g <- ggplot(vardat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2)
g <- g + geom_vline(xintercept = ori_theory_var, size = 2, col='red')
g <- g + geom_text(aes(x = ori_theory_var + 3, y = 0.042,
label='theoretical varicane = 25'),
hjust =0, vjust =0, colour = 'red')
g <- g + ggtitle('Sample Variance versus Theoretical Variance')
g <- g + xlab('Variance of 40 exponentials')
print(g)
library(datasets)
data("ToothGrowth")
ls()
head(ToothGrowth)
class(ToothGrowth)
dim(ToothGrowth)
names(ToothGrowth)
head(ToothGrowth)
class(ToothGrowth$len)
class(ToothGrowth$supp)
class(ToothGrowth$dose)
summary(ToothGrowth)
?ToothGrowth
summary(ToothGrowth$dose)
unique(ToothGrowth$dose)
ToothGrowth
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
summary(ToothGrowth)
g <- ggplot(data=ToothGrowth, aes(dose, len))
g + geom_point()
g <- g + facet_grid(facets = .~supp)
g + geom_point()
g <- ggplot(data=ToothGrowth, aes(dose, len, group = supp))
g <- g + facet_grid(facets = .~supp)
g + geom_point()
g <- ggplot(data=ToothGrowth, aes(dose, len, colors = supp))
g <- g + facet_grid(facets = .~supp)
g + geom_point()
g <- ggplot(data=ToothGrowth, aes(dose, len))
g <- g + facet_grid(facets = .~supp, colours = supp)
g <- ggplot(data=ToothGrowth, aes(dose, len), col = supp)
g <- g + facet_grid(facets = .~supp)
g + geom_point()
g <- ggplot(data=ToothGrowth, aes(dose, len, color=supp))
g <- g + facet_grid(facets = .~supp)
g + geom_point()
g + geom_point(aes(g <- ggplot(data=ToothGrowth, aes(dose, len, color=supp, group = dose))))
g <- ggplot(data=ToothGrowth, aes(dose, len, color=supp, group = dose))
g <- g + facet_grid(facets = .~supp)
g + geom_point()
?facet_grid
g <- ggplot(data=ToothGrowth, aes(dose, len))
g <- g + facet_grid(facets = .~supp)
g + geom_point(colour = supp)
g <- ggplot(data=ToothGrowth, aes(dose, len))
g <- g + facet_grid(facets = .~supp)
g + geom_point(aes(colour = supp))
g <- ggplot(data=ToothGrowth, aes(dose, len))
g <- g + facet_grid(facets = .~supp)
g + geom_point(aes(colour = dose))
g <- ggplot(data=ToothGrowth, aes(dose, len))
g <- g + facet_grid(facets = .~supp)
g <- g + geom_point(aes(colour = dose))
g + geom_line(mapping = mean)
?geom_line
g <- ggplot(data=ToothGrowth, aes(dose, len, group = dose))
g + facet_grid(facets = .~supp)
g <- g + facet_grid(facets = .~supp)
g + geom_point()
g + geom_line()
g + geom_line(mapping = mean)
g + geom_point()
g <- ggplot(data=ToothGrowth, aes(dose, len, group = supp))
g <- g + facet_grid(facets = .~supp)
g <- g + geom_point(aes(colour = dose))
g + geom_line()
g <- ggplot(data=ToothGrowth, aes(dose, len, group = supp))
g <- g + facet_grid(facets = .~supp)
g <- g + geom_point(aes(colour = dose))
print (g)
g + geom_line()
g + stat_sum()
g + stat_mean()
g + stat_smooth()
g + geom_smooth()
?geom_smooth
g + geom_smooth(stat = "identity")
g + geom_smooth(stat = "mean")
g + geom_smooth(stat = "smooth")
g + geom_smooth(stat = "smooth", method = "lm")
?stat_smooth
g + geom_smooth(stat = "smooth", method = "loess")
warnings()
g + geom_smooth(stat = "smooth", method = "rlm")
g + geom_smooth(stat = "smooth", method = "glm")
g + geom_smooth(stat = "smooth", method = "gam")
g + geom_smooth(stat = "smooth", method = "loess", loess=FALSE)
g + geom_smooth(stat = "smooth", method = "loess", loess=0)
library(ggplot2)
g <- ggplot(data=ToothGrowth, aes(dose, len, group = supp))
g <- g + facet_grid(facets = .~supp)
g <- g + geom_point(aes(colour = dose))
g + geom_smooth(stat = "smooth", method = "loess")
g <- g + geom_smooth(stat = "smooth", method = "loess")
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC'], ToothGrowth$len[ToothGrowth$supp == 'OJ'])
mean(ToothGrowth$len[ToothGrowth$supp == 'VC']) - mean(ToothGrowth$len[ToothGrowth$supp == 'OJ'])
?ToothGrowth
head(ToothGrowth)
t.test(len ~ supp, data = ToothGrowth, var.equal = FALSE)
t.test(len ~ supp, data = ToothGrowth, var.equal = FALSE, paired = FALSE)
unique(ToothGrowth$dose)
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC'], ToothGrowth$len[ToothGrowth$supp == 'OJ'], var.equal = FALSE)
?t.test
t.test(len ~ supp, data = ToothGrowth, var.equal = FALSE, alternative="less")
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC'], ToothGrowth$len[ToothGrowth$supp == 'OJ'], var.equal = FALSE, alternative="less")
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC'], ToothGrowth$len[ToothGrowth$supp == 'OJ'], var.equal = FALSE, alternative="less")
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC'], ToothGrowth$len[ToothGrowth$supp == 'OJ'], var.equal = FALSE, alternative="less")
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC'], ToothGrowth$len[ToothGrowth$supp == 'OJ'], var.equal = FALSE, alternative="less")
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC'], ToothGrowth$len[ToothGrowth$supp == 'OJ'], var.equal = FALSE, alternative="greater")
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC'] - ToothGrowth$len[ToothGrowth$supp == 'OJ'], var.equal = FALSE, alternative="greater")
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 0.5] - ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5], var.equal = FALSE, alternative="greater")
?ToothGrowth
unique(ToothGrowth$dose)
ToothGrowth$len[ToothGrowth$dos == 1.0]
ToothGrowth[ToothGrowth$dos == 1.0]$len
ToothGrowth[ToothGrowth$dos == 1.0,]$len
ToothGrowth[ToothGrowth$dos == 2.0,]$len
t.test?
''
?t.test
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 0.5] - ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5], var.equal = FALSE, paired = FALSE, alternative="greater")
t.test(ToothGrowth$len[ToothGrowth$supp == 'VC'] - ToothGrowth$len[ToothGrowth$supp == 'OJ'], var.equal = FALSE, paired = FALSE, alternative="greater")
t.test(ToothGrowth$len[ToothGrowth$dose == 0.5] - ToothGrowth$len[ ToothGrowth$dose == 1.0], var.equal = FALSE, paired = FALSE, alternative="greater")
ToothGrowth$len[ToothGrowth$dose == 0.5]
ToothGrowth$len[ ToothGrowth$dose == 1.0]
t.test(ToothGrowth$len[ToothGrowth$dose == 0.5] , ToothGrowth$len[ ToothGrowth$dose == 1.0], var.equal = FALSE, paired = FALSE, alternative="greater")
t.test(ToothGrowth$len[ToothGrowth$dose == 0.5] , ToothGrowth$len[ ToothGrowth$dose == 1.0], var.equal = FALSE, paired = TRUE, alternative="greater")
t.test(ToothGrowth$len[ToothGrowth$dose == 0.5] , ToothGrowth$len[ ToothGrowth$dose == 1.0], var.equal = TRUE, paired = TRUE, alternative="greater")
t.test(ToothGrowth$len[ToothGrowth$dose == 0.5] , ToothGrowth$len[ ToothGrowth$dose == 1.0], var.equal = TRUE, paired = TRUE, alternative="less")
